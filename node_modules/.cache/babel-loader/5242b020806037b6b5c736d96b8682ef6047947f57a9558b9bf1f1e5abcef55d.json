{"ast":null,"code":"var _jsxFileName = \"/Users/joeyzhu/code/visuals/pentaquad/src/components/game/GameCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport GameGraphics from './GameGraphics';\nimport GameState from './GameState';\nimport GameController from './GameController';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameCanvas = props => {\n  _s();\n  // Initial GameState\n  const [gameState, setGameState] = useState(new GameState({\n    boardSize: 16\n  }));\n  const [canvasTimer, setCanvasTimer] = useState(0);\n\n  // Keypress logic\n  const [gameController, setGameController] = useState(new GameController({}));\n  const handleKeypress = event => {\n    gameController.handleKeypress(event.key);\n    gameState.executeAction(gameController.consumeAction());\n  };\n  window.onkeydown = function (e) {\n    return e.keyCode !== 32 && e.key !== \" \";\n  };\n\n  // Main update loop\n  useEffect(() => {\n    const interval = setInterval(() => {\n      console.log(\"rendered\");\n      if (gameState != undefined) {\n        setGameState(gameState.update());\n      }\n      setCanvasTimer(canvasTimer + 1);\n    }, 20);\n    return () => clearInterval(interval);\n  }, [canvasTimer]);\n\n  // Render Output\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"gameCanvas\",\n    tabIndex: 0,\n    onKeyDown: handleKeypress,\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"gameGraphics\",\n      children: /*#__PURE__*/_jsxDEV(GameGraphics, {\n        gameState: gameState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(GameCanvas, \"FnNHVmnnxc7c+7XKQ/oA3xJUssU=\");\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useState","useEffect","GameGraphics","GameState","GameController","jsxDEV","_jsxDEV","GameCanvas","props","_s","gameState","setGameState","boardSize","canvasTimer","setCanvasTimer","gameController","setGameController","handleKeypress","event","key","executeAction","consumeAction","window","onkeydown","e","keyCode","interval","setInterval","console","log","undefined","update","clearInterval","id","tabIndex","onKeyDown","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/joeyzhu/code/visuals/pentaquad/src/components/game/GameCanvas.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport GameGraphics from'./GameGraphics';\nimport GameState from './GameState';\nimport GameController from './GameController';\n\nconst GameCanvas = (props) => {\n  \n    // Initial GameState\n    const [gameState, setGameState] = useState(new GameState({\n        boardSize: 16,\n    }));\n    const [canvasTimer, setCanvasTimer] = useState(0);\n\n    // Keypress logic\n    const [gameController, setGameController] = useState(new GameController({}));\n    const handleKeypress = (event) => {\n        gameController.handleKeypress(event.key);\n        gameState.executeAction(gameController.consumeAction());\n    }\n    window.onkeydown = function(e) {\n        return e.keyCode !== 32 && e.key !== \" \";\n    }\n\n    // Main update loop\n    useEffect(() => {\n        const interval = setInterval(() => {\n            console.log(\"rendered\");\n\n            if (gameState != undefined) {\n                setGameState(gameState.update());\n            }\n            setCanvasTimer(canvasTimer + 1);\n        }, 20);\n        return () => clearInterval(interval);\n      }, [canvasTimer]);\n\n    // Render Output\n    return (\n        <div id=\"gameCanvas\" tabIndex={0} onKeyDown={handleKeypress}>\n            <canvas id=\"gameGraphics\">\n                <GameGraphics gameState={gameState} />\n            </canvas>\n        </div>\n    );\n};\n\nexport default GameCanvas;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,YAAY,MAAK,gBAAgB;AACxC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAE1B;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAIG,SAAS,CAAC;IACrDS,SAAS,EAAE;EACf,CAAC,CAAC,CAAC;EACH,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;;EAEjD;EACA,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,IAAII,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5E,MAAMa,cAAc,GAAIC,KAAK,IAAK;IAC9BH,cAAc,CAACE,cAAc,CAACC,KAAK,CAACC,GAAG,CAAC;IACxCT,SAAS,CAACU,aAAa,CAACL,cAAc,CAACM,aAAa,EAAE,CAAC;EAC3D,CAAC;EACDC,MAAM,CAACC,SAAS,GAAG,UAASC,CAAC,EAAE;IAC3B,OAAOA,CAAC,CAACC,OAAO,KAAK,EAAE,IAAID,CAAC,CAACL,GAAG,KAAK,GAAG;EAC5C,CAAC;;EAED;EACAlB,SAAS,CAAC,MAAM;IACZ,MAAMyB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MAEvB,IAAInB,SAAS,IAAIoB,SAAS,EAAE;QACxBnB,YAAY,CAACD,SAAS,CAACqB,MAAM,EAAE,CAAC;MACpC;MACAjB,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IACnC,CAAC,EAAE,EAAE,CAAC;IACN,OAAO,MAAMmB,aAAa,CAACN,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACb,WAAW,CAAC,CAAC;;EAEnB;EACA,oBACIP,OAAA;IAAK2B,EAAE,EAAC,YAAY;IAACC,QAAQ,EAAE,CAAE;IAACC,SAAS,EAAElB,cAAe;IAAAmB,QAAA,eACxD9B,OAAA;MAAQ2B,EAAE,EAAC,cAAc;MAAAG,QAAA,eACrB9B,OAAA,CAACJ,YAAY;QAACQ,SAAS,EAAEA;MAAU;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACjC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACP;AAEd,CAAC;AAAC/B,EAAA,CAvCIF,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AAyChB,eAAeA,UAAU;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}