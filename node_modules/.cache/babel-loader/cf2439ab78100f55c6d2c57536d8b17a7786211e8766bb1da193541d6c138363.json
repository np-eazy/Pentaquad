{"ast":null,"code":"import { X, Y, GRID_SIZE, T, G0, G1, BASE, RAD } from './graphic-utils.js';\nfunction drawRect(canvas, x1, y1, x2, y2) {\n  var canvas = c.getContext(\"2d\");\n  canvas.beginPath();\n  canvas.rect(20, 20, 150, 100);\n  canvas.stroke();\n}\nconst DIMENSIONS = 800;\nconst GameGraphics = props => {\n  function render(canvas, board) {\n    var [xSize, ySize] = [board[0].length, board.length];\n    var [xCellSize, yCellSize] = [DIMENSIONS / xSize, DIMENSIONS / ySize];\n    for (var y = 0; y < ySize; y++) {\n      for (var x = 0; x < xSize; x++) {}\n    }\n  }\n  var canv = document.getElementById(\"gameGraphics\");\n  var ctx = canv != null ? canv.getContext('2d') : null;\n  if (ctx != null && props.gameState != undefined) {\n    ctx.clearRect(G0[X], G0[Y], G1[X], G1[Y]);\n    render(ctx, props.gameState.smoothGrid, 8);\n  }\n};\n_c = GameGraphics;\nexport default GameGraphics;\nvar _c;\n$RefreshReg$(_c, \"GameGraphics\");","map":{"version":3,"names":["X","Y","GRID_SIZE","T","G0","G1","BASE","RAD","drawRect","canvas","x1","y1","x2","y2","c","getContext","beginPath","rect","stroke","DIMENSIONS","GameGraphics","props","render","board","xSize","ySize","length","xCellSize","yCellSize","y","x","canv","document","getElementById","ctx","gameState","undefined","clearRect","smoothGrid","_c","$RefreshReg$"],"sources":["/Users/joeyzhu/code/visuals/pentaquad/src/components/game/GameGraphics.js"],"sourcesContent":["import {X, Y, GRID_SIZE, T, G0, G1, BASE, RAD} from './graphic-utils.js';\n\nfunction drawRect(canvas, x1, y1, x2, y2) {\n    var canvas = c.getContext(\"2d\");\n    canvas.beginPath();\n    canvas.rect(20, 20, 150, 100);\n    canvas.stroke();\n}\n\nconst DIMENSIONS = 800\n\nconst GameGraphics = (props) => {\n    function render(canvas, board) {\n        var [xSize, ySize] = [board[0].length, board.length]\n        var [xCellSize, yCellSize] = [DIMENSIONS / xSize, DIMENSIONS / ySize]\n        for (var y = 0; y < ySize; y++) {\n            for (var x = 0; x < xSize; x++) {\n                \n            }\n        }\n    }\n\n    var canv = document.getElementById(\"gameGraphics\");\n    var ctx = canv != null ? canv.getContext('2d') : null;\n\n    if (ctx != null && props.gameState != undefined) {\n        ctx.clearRect(G0[X], G0[Y], G1[X], G1[Y]);\n        render(ctx, props.gameState.smoothGrid, 8);\n    }\n};\n\nexport default GameGraphics;\n"],"mappings":"AAAA,SAAQA,CAAC,EAAEC,CAAC,EAAEC,SAAS,EAAEC,CAAC,EAAEC,EAAE,EAAEC,EAAE,EAAEC,IAAI,EAAEC,GAAG,QAAO,oBAAoB;AAExE,SAASC,QAAQA,CAACC,MAAM,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;EACtC,IAAIJ,MAAM,GAAGK,CAAC,CAACC,UAAU,CAAC,IAAI,CAAC;EAC/BN,MAAM,CAACO,SAAS,EAAE;EAClBP,MAAM,CAACQ,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;EAC7BR,MAAM,CAACS,MAAM,EAAE;AACnB;AAEA,MAAMC,UAAU,GAAG,GAAG;AAEtB,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC5B,SAASC,MAAMA,CAACb,MAAM,EAAEc,KAAK,EAAE;IAC3B,IAAI,CAACC,KAAK,EAAEC,KAAK,CAAC,GAAG,CAACF,KAAK,CAAC,CAAC,CAAC,CAACG,MAAM,EAAEH,KAAK,CAACG,MAAM,CAAC;IACpD,IAAI,CAACC,SAAS,EAAEC,SAAS,CAAC,GAAG,CAACT,UAAU,GAAGK,KAAK,EAAEL,UAAU,GAAGM,KAAK,CAAC;IACrE,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,KAAK,EAAEI,CAAC,EAAE,EAAE;MAC5B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,KAAK,EAAEM,CAAC,EAAE,EAAE,CAEhC;IACJ;EACJ;EAEA,IAAIC,IAAI,GAAGC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;EAClD,IAAIC,GAAG,GAAGH,IAAI,IAAI,IAAI,GAAGA,IAAI,CAAChB,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI;EAErD,IAAImB,GAAG,IAAI,IAAI,IAAIb,KAAK,CAACc,SAAS,IAAIC,SAAS,EAAE;IAC7CF,GAAG,CAACG,SAAS,CAACjC,EAAE,CAACJ,CAAC,CAAC,EAAEI,EAAE,CAACH,CAAC,CAAC,EAAEI,EAAE,CAACL,CAAC,CAAC,EAAEK,EAAE,CAACJ,CAAC,CAAC,CAAC;IACzCqB,MAAM,CAACY,GAAG,EAAEb,KAAK,CAACc,SAAS,CAACG,UAAU,EAAE,CAAC,CAAC;EAC9C;AACJ,CAAC;AAACC,EAAA,GAlBInB,YAAY;AAoBlB,eAAeA,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}