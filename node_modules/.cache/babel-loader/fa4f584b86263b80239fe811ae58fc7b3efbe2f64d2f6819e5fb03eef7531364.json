{"ast":null,"code":"import Direction from \"./gameUtils/Direction\";\n\n// TODO: Pull up this function into a utils/functions file\nfunction randint(a, b) {\n  return Math.floor(Math.random() * (b - a)) + a;\n}\nconst GameState = class {\n  constructor(_ref) {\n    let {\n      boardSize\n    } = _ref;\n    this.timer = 0;\n    this.boardSize = boardSize;\n    this.gravity = new Direction(3);\n    this.placeBlock = true;\n    this.currPiece = null;\n  }\n  update(increment) {\n    if (this.placeBlock) {\n      var [x, y] = [0, 0];\n      r = randint(-2, this.boardSize + 2);\n      if (this.gravity == 0) {\n        [x, y] = [-2, r];\n      } else if (this.gravity == 1) {\n        [x, y] = [r, -2];\n      }\n      this.gravity.turnLeft(1);\n      this.placeBlock = false;\n    }\n  }\n  executeAction(action) {\n    console.log(action);\n    return this;\n  }\n};\nexport default GameState;","map":{"version":3,"names":["Direction","randint","a","b","Math","floor","random","GameState","constructor","_ref","boardSize","timer","gravity","placeBlock","currPiece","update","increment","x","y","r","turnLeft","executeAction","action","console","log"],"sources":["/Users/joeyzhu/code/visuals/pentaquad/src/components/game/GameState.js"],"sourcesContent":["import Direction from \"./gameUtils/Direction\";\n\n// TODO: Pull up this function into a utils/functions file\nfunction randint(a, b) {\n    return Math.floor(Math.random() * (b - a)) + a;\n}\n\n\nconst GameState = class {\n    constructor ({boardSize}) {\n        this.timer = 0;\n        this.boardSize = boardSize;\n        this.gravity = new Direction(3);\n        this.placeBlock = true;\n        this.currPiece= null;\n    }\n\n    update(increment) {\n        if (this.placeBlock) {\n            var [x, y] = [0, 0]\n            r = randint(-2, this.boardSize + 2)\n            if (this.gravity == 0) {\n                [x, y] = [-2, r]\n            } else if (this.gravity == 1) {\n                [x, y] = [r, -2]\n            }\n\n            this.gravity.turnLeft(1);\n            this.placeBlock = false;\n        }  \n    }\n\n    executeAction(action) {\n        console.log(action);\n        return this;\n    }\n}\n\nexport default GameState;"],"mappings":"AAAA,OAAOA,SAAS,MAAM,uBAAuB;;AAE7C;AACA,SAASC,OAAOA,CAACC,CAAC,EAAEC,CAAC,EAAE;EACnB,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIH,CAAC,GAAGD,CAAC,CAAC,CAAC,GAAGA,CAAC;AAClD;AAGA,MAAMK,SAAS,GAAG,MAAM;EACpBC,WAAWA,CAAAC,IAAA,EAAe;IAAA,IAAb;MAACC;IAAS,CAAC,GAAAD,IAAA;IACpB,IAAI,CAACE,KAAK,GAAG,CAAC;IACd,IAAI,CAACD,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACE,OAAO,GAAG,IAAIZ,SAAS,CAAC,CAAC,CAAC;IAC/B,IAAI,CAACa,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,SAAS,GAAE,IAAI;EACxB;EAEAC,MAAMA,CAACC,SAAS,EAAE;IACd,IAAI,IAAI,CAACH,UAAU,EAAE;MACjB,IAAI,CAACI,CAAC,EAAEC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;MACnBC,CAAC,GAAGlB,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAACS,SAAS,GAAG,CAAC,CAAC;MACnC,IAAI,IAAI,CAACE,OAAO,IAAI,CAAC,EAAE;QACnB,CAACK,CAAC,EAAEC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAEC,CAAC,CAAC;MACpB,CAAC,MAAM,IAAI,IAAI,CAACP,OAAO,IAAI,CAAC,EAAE;QAC1B,CAACK,CAAC,EAAEC,CAAC,CAAC,GAAG,CAACC,CAAC,EAAE,CAAC,CAAC,CAAC;MACpB;MAEA,IAAI,CAACP,OAAO,CAACQ,QAAQ,CAAC,CAAC,CAAC;MACxB,IAAI,CAACP,UAAU,GAAG,KAAK;IAC3B;EACJ;EAEAQ,aAAaA,CAACC,MAAM,EAAE;IAClBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnB,OAAO,IAAI;EACf;AACJ,CAAC;AAED,eAAef,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}