{"ast":null,"code":"var _jsxFileName = \"/Users/joeyzhu/code/visuals/pentaquad/src/components/game/GameCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport GameGraphics from './graphics/GameGraphics';\nimport CoreState from './coreState/CoreState';\nimport GameController from './GameController';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WINDOW_SIZE = 800;\nconst BOARD_SIZE = 64;\nconst REFRESH_MS = 200;\nconst GameCanvas = props => {\n  _s();\n  // The global flow of tempo to facilitate the useEffect update loop\n  const [canvasTimer, setCanvasTimer] = useState(0);\n  // Keypress logic\n  const [gameController, setGameController] = useState(new GameController({}));\n  // Initial GameState\n  // TODO: Create a GameState that wraps around CoreState to control when active game logic takes place\n  const [gameState, setGameState] = useState(new CoreState({\n    boardSize: 64,\n    controller: gameController\n  }));\n  const handleKeypress = event => {\n    gameController.handleKeyDown(event.key);\n  };\n  window.onkeydown = function (e) {\n    return e.keyCode !== 32 && e.key !== \" \";\n  };\n\n  // Main update loop\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (gameState != undefined) {\n        setGameState(gameState.update());\n      }\n      setCanvasTimer(canvasTimer + 1);\n    }, REFRESH_MS);\n    return () => clearInterval(interval);\n  }, [canvasTimer]);\n\n  // Render Output\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"gameCanvas\",\n    tabIndex: 0,\n    onKeyDown: handleKeypress,\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"gameGraphics\",\n      width: WINDOW_SIZE,\n      height: WINDOW_SIZE,\n      children: /*#__PURE__*/_jsxDEV(GameGraphics, {\n        gameState: gameState,\n        windowSize: WINDOW_SIZE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(GameCanvas, \"69xU/sB75EpRFCR7OhhFpN+xGxc=\");\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useState","useEffect","GameGraphics","CoreState","GameController","jsxDEV","_jsxDEV","WINDOW_SIZE","BOARD_SIZE","REFRESH_MS","GameCanvas","props","_s","canvasTimer","setCanvasTimer","gameController","setGameController","gameState","setGameState","boardSize","controller","handleKeypress","event","handleKeyDown","key","window","onkeydown","e","keyCode","interval","setInterval","undefined","update","clearInterval","id","tabIndex","onKeyDown","children","width","height","windowSize","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/joeyzhu/code/visuals/pentaquad/src/components/game/GameCanvas.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport GameGraphics from'./graphics/GameGraphics';\nimport CoreState from './coreState/CoreState';\nimport GameController from './GameController';\n\nconst WINDOW_SIZE = 800\nconst BOARD_SIZE = 64\nconst REFRESH_MS = 200 \n\nconst GameCanvas = (props) => {\n    // The global flow of tempo to facilitate the useEffect update loop\n    const [canvasTimer, setCanvasTimer] = useState(0);\n    // Keypress logic\n    const [gameController, setGameController] = useState(new GameController({}));\n    // Initial GameState\n    // TODO: Create a GameState that wraps around CoreState to control when active game logic takes place\n    const [gameState, setGameState] = useState(new CoreState({\n        boardSize: 64,\n        controller: gameController\n    }));\n\n    const handleKeypress = (event) => {\n        gameController.handleKeyDown(event.key);\n    }\n    window.onkeydown = function(e) {\n        return e.keyCode !== 32 && e.key !== \" \";\n    }\n\n    // Main update loop\n    useEffect(() => {\n        const interval = setInterval(() => {\n            if (gameState != undefined) {\n                setGameState(gameState.update());\n            }\n            setCanvasTimer(canvasTimer + 1);\n        }, REFRESH_MS);\n        return () => clearInterval(interval);\n      }, [canvasTimer]);\n\n    // Render Output\n    return (\n        <div id=\"gameCanvas\" tabIndex={0} onKeyDown={handleKeypress}>\n            <canvas id=\"gameGraphics\" width={WINDOW_SIZE} height={WINDOW_SIZE}>\n                <GameGraphics gameState={gameState} windowSize={WINDOW_SIZE} />\n            </canvas>\n        </div>\n    );\n};\n\nexport default GameCanvas;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,YAAY,MAAK,yBAAyB;AACjD,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,GAAG,GAAG;AACvB,MAAMC,UAAU,GAAG,EAAE;AACrB,MAAMC,UAAU,GAAG,GAAG;AAEtB,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACjD;EACA,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,IAAII,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5E;EACA;EACA,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,IAAIG,SAAS,CAAC;IACrDgB,SAAS,EAAE,EAAE;IACbC,UAAU,EAAEL;EAChB,CAAC,CAAC,CAAC;EAEH,MAAMM,cAAc,GAAIC,KAAK,IAAK;IAC9BP,cAAc,CAACQ,aAAa,CAACD,KAAK,CAACE,GAAG,CAAC;EAC3C,CAAC;EACDC,MAAM,CAACC,SAAS,GAAG,UAASC,CAAC,EAAE;IAC3B,OAAOA,CAAC,CAACC,OAAO,KAAK,EAAE,IAAID,CAAC,CAACH,GAAG,KAAK,GAAG;EAC5C,CAAC;;EAED;EACAvB,SAAS,CAAC,MAAM;IACZ,MAAM4B,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/B,IAAIb,SAAS,IAAIc,SAAS,EAAE;QACxBb,YAAY,CAACD,SAAS,CAACe,MAAM,EAAE,CAAC;MACpC;MACAlB,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IACnC,CAAC,EAAEJ,UAAU,CAAC;IACd,OAAO,MAAMwB,aAAa,CAACJ,QAAQ,CAAC;EACtC,CAAC,EAAE,CAAChB,WAAW,CAAC,CAAC;;EAEnB;EACA,oBACIP,OAAA;IAAK4B,EAAE,EAAC,YAAY;IAACC,QAAQ,EAAE,CAAE;IAACC,SAAS,EAAEf,cAAe;IAAAgB,QAAA,eACxD/B,OAAA;MAAQ4B,EAAE,EAAC,cAAc;MAACI,KAAK,EAAE/B,WAAY;MAACgC,MAAM,EAAEhC,WAAY;MAAA8B,QAAA,eAC9D/B,OAAA,CAACJ,YAAY;QAACe,SAAS,EAAEA,SAAU;QAACuB,UAAU,EAAEjC;MAAY;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC1D;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACP;AAEd,CAAC;AAAChC,EAAA,CAtCIF,UAAU;AAAAmC,EAAA,GAAVnC,UAAU;AAwChB,eAAeA,UAAU;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}