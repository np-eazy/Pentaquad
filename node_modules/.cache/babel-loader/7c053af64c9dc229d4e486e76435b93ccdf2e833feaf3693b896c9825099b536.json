{"ast":null,"code":"import { X, Y, GRID_SIZE, T, G0, G1, BASE, RAD } from './graphic-utils.js';\nfunction clip1d(a) {\n  return Math.min(Math.max(0, a), 0.9999);\n}\n\n// The colors here are on unit scale to make calculations easier in lieu of importing utils/colors.js\nfunction componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? \"0\" + hex : hex;\n}\nfunction rgbToHex(r, g, b) {\n  return \"#\" + componentToHex(Math.floor(r * 256)) + componentToHex(Math.floor(g * 256)) + componentToHex(Math.floor(b * 256));\n}\nfunction localToGlobal(c) {\n  return [G0[X] + (G1[X] - G0[X]) * c[X] / GRID_SIZE[X], G0[Y] + (G1[Y] - G0[Y]) * c[Y] / GRID_SIZE[Y]];\n}\nfunction drawLine(canvas, c1, c2, width, color) {\n  canvas.strokeStyle = color;\n  canvas.lineWidth = width;\n  canvas.beginPath();\n  canvas.moveTo(c1[X], c1[Y]);\n  canvas.lineTo(c2[X], c2[Y]);\n  canvas.stroke();\n}\nfunction drawRect(canvas) {\n  var canvas = c.getContext(\"2d\");\n  canvas.beginPath();\n  canvas.rect(20, 20, 150, 100);\n  canvas.stroke();\n}\nfunction drawDiagCross(canvas, center, length, color) {\n  length = Math.max(0, length);\n  if (length > 0) {\n    drawLine(canvas, [center[X] - length, center[Y] - length], [center[X] + length, center[Y] + length], 2, color);\n    drawLine(canvas, [center[X] + length, center[Y] - length], [center[X] - length, center[Y] + length], 2, color);\n  }\n}\nconst GameGraphics = props => {\n  function render(canvas, grid, glow) {\n    var center;\n    var length;\n    for (var y = 0; y < GRID_SIZE[Y]; y++) {\n      for (var x = 10; x < GRID_SIZE[X] - 5; x++) {\n        length = BASE + RAD * grid.getVal(x, y) * 2;\n        center = localToGlobal([x + 0.5, y + 0.5]);\n\n        // Get grid colors\n        var r = 0.4 + 0.006 * (x + y) + 0.05 * Math.sin(props.gameState.timer * 0.24 / T);\n        var g = 0.3 + 0.002 * (x - y) + 0.04 * Math.cos(props.gameState.timer * 0.48 / T);\n        var b = 0.45 - 0.006 * (x / 2 + y) - 0.1 * Math.sin(props.gameState.timer * 0.89 / T);\n\n        // Invert if negative\n        if (grid.getVal(x, y) < 0) {\n          r = 1 - r;\n          g = 1 - g;\n          b = 1 - b;\n        }\n\n        // Render checkerboard of crosses\n        if ((x + y) % 2 == 0) {\n          // Linear dodge for more engaging colors\n          var blur = Math.min(1, Math.max(0, glow - (y - 25) / 5));\n          r = clip1d(r * (1 + 2 * blur * grid.getVal(x, y) * grid.getVal(x, y)));\n          g = clip1d(g * (1 + 1.5 * blur * grid.getVal(x, y) * grid.getVal(x, y)));\n          b = clip1d(b * (1 + 0.75 * blur * grid.getVal(x, y) * grid.getVal(x, y)));\n          var hex = rgbToHex(r, g, b);\n          drawDiagCross(canvas, [center[X], center[Y]], Math.min(10, Math.abs(length) * 1.3), hex);\n        }\n      }\n    }\n  }\n  var canv = document.getElementById(\"gameGraphics\");\n  var ctx = canv != null ? canv.getContext('2d') : null;\n  if (ctx != null && props.gameState != undefined) {\n    ctx.clearRect(G0[X], G0[Y], G1[X], G1[Y]);\n    render(ctx, props.gameState.smoothGrid, 8);\n  }\n};\n_c = GameGraphics;\nexport default GameGraphics;\nvar _c;\n$RefreshReg$(_c, \"GameGraphics\");","map":{"version":3,"names":["X","Y","GRID_SIZE","T","G0","G1","BASE","RAD","clip1d","a","Math","min","max","componentToHex","c","hex","toString","length","rgbToHex","r","g","b","floor","localToGlobal","drawLine","canvas","c1","c2","width","color","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","drawRect","getContext","rect","drawDiagCross","center","GameGraphics","props","render","grid","glow","y","x","getVal","sin","gameState","timer","cos","blur","abs","canv","document","getElementById","ctx","undefined","clearRect","smoothGrid","_c","$RefreshReg$"],"sources":["/Users/joeyzhu/code/visuals/pentaquad/src/components/game/GameGraphics.js"],"sourcesContent":["import {X, Y, GRID_SIZE, T, G0, G1, BASE, RAD} from './graphic-utils.js';\n\nfunction clip1d(a) {\n    return Math.min(Math.max(0, a), 0.9999);\n}\n\n// The colors here are on unit scale to make calculations easier in lieu of importing utils/colors.js\nfunction componentToHex(c) {\n    var hex = c.toString(16);\n    return hex.length == 1 ? \"0\" + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n    return \"#\" + componentToHex(Math.floor(r * 256)) + componentToHex(Math.floor(g * 256)) + componentToHex(Math.floor(b * 256));\n}\n\nfunction localToGlobal(c) {\n    return [G0[X] + (G1[X] - G0[X]) * c[X] / GRID_SIZE[X], G0[Y] + (G1[Y] - G0[Y]) * c[Y] / GRID_SIZE[Y]];\n}\n\nfunction drawLine(canvas, c1, c2, width, color) {\n    canvas.strokeStyle = color;\n    canvas.lineWidth = width;\n    canvas.beginPath();\n    canvas.moveTo(c1[X], c1[Y]);\n    canvas.lineTo(c2[X], c2[Y]);\n    canvas.stroke();\n}\n\nfunction drawRect(canvas) {\n    var canvas = c.getContext(\"2d\");\n    canvas.beginPath();\n    canvas.rect(20, 20, 150, 100);\n    canvas.stroke();\n}\n\nfunction drawDiagCross(canvas, center, length, color) {\n    length = Math.max(0, length);\n    if (length > 0) {\n        drawLine(canvas, \n            [center[X] - length, center[Y] - length], \n            [center[X] + length, center[Y] + length], \n            2, color);\n        drawLine(canvas, \n            [center[X] + length, center[Y] - length], \n            [center[X] - length, center[Y] + length], \n            2, color);\n    }\n}\n\nconst GameGraphics = (props) => {\n    function render(canvas, grid, glow) {\n        var center;\n        var length;\n        for (var y = 0; y < GRID_SIZE[Y]; y++) {\n            for (var x = 10; x < GRID_SIZE[X]-5; x++) {\n                length = BASE + RAD * (grid.getVal(x, y)) * 2;\n                center = localToGlobal([x + 0.5, y + 0.5]);\n                \n                // Get grid colors\n                var r = 0.4 + 0.006 * (x + y) + 0.05 * Math.sin(props.gameState.timer * 0.24 / T);\n                var g = 0.3 + 0.002 * (x - y) + 0.04 * Math.cos(props.gameState.timer * 0.48 / T );\n                var b = 0.45 - 0.006 * (x / 2 + y) - 0.1 * Math.sin(props.gameState.timer * 0.89 / T);\n                \n                // Invert if negative\n                if (grid.getVal(x, y) < 0) {\n                    r = 1 - r;\n                    g = 1 - g;\n                    b = 1 - b;\n                }\n                \n                // Render checkerboard of crosses\n                if ((x + y) % 2 == 0) {\n                    // Linear dodge for more engaging colors\n                    var blur = Math.min(1, Math.max(0, glow - (y-25)/5));\n                    r = clip1d(r * (1 + 2 * blur * grid.getVal(x, y) * grid.getVal(x, y)));\n                    g = clip1d(g * (1 + 1.5 * blur * grid.getVal(x, y) * grid.getVal(x, y)));\n                    b = clip1d(b * (1 + 0.75 * blur * grid.getVal(x, y) * grid.getVal(x, y)));\n                    \n                    var hex = rgbToHex(r, g, b);\n                    drawDiagCross(canvas, [center[X], center[Y]], Math.min(10, Math.abs(length) * 1.3), hex);\n                }\n            }\n        }\n    }\n\n    var canv = document.getElementById(\"gameGraphics\");\n    var ctx = canv != null ? canv.getContext('2d') : null;\n\n    if (ctx != null && props.gameState != undefined) {\n        ctx.clearRect(G0[X], G0[Y], G1[X], G1[Y]);\n        render(ctx, props.gameState.smoothGrid, 8);\n    }\n};\n\nexport default GameGraphics;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}